{
  "name": "dploy",
  "tagline": "The DC/OS deployment tool for appops",
  "body": "# dploy\r\n\r\ndploy the DC/OS deployment tool for appops.\r\n\r\n## Dependencies\r\n\r\n- [DC/OS 1.7](https://dcos.io/releases/1.7.0/)\r\n- [github.com/gambol99/go-marathon](https://github.com/gambol99/go-marathon), an API library for working with Marathon.\r\n- [github.com/Sirupsen/logrus](https://github.com/Sirupsen/logrus), a logging library.\r\n\r\n## Usage\r\n\r\n### Installation\r\n\r\nFrom source:\r\n\r\n    $ go get github.com/mhausenblas/dploy\r\n    $ go build\r\n\r\nDownload binaries:\r\n\r\n    TBD\r\n\r\nAs a preparation to deal with the JWT Auth, you can simply create an SSH tunnel to the DC/OS Master:\r\n\r\n    $ ssh -i ~/.ssh/MYKEY core@MYMASTER -f -L 8080:localhost:8080 -N\r\n\r\nFrom here on, use `http://localhost:8080` for the Marathon base URL.\r\n\r\n### Workflow\r\n\r\n- `dploy init` … creates a new app for you, that is, a `dploy.app` file with default values is created in `-location`\r\n- `dploy dryrun` … validates deployment of the app by checking if DC/OS cluster is valid, validates app specs, etc.\r\n- `kploy run`… launches the app using the Marathon API\r\n- `dploy ls` … lists the content of the app, all its resources such as Marathon app specs, etc.\r\n- `dploy ps` … lists runtime properties of the app, such as on which node/port its running, etc.\r\n- `dploy update`… lets you update properties of the app, such as scaling or environment variables\r\n- `dploy destroy`… tears down your app\r\n- `dploy publish` … publishes the app in the DC/OS Universe\r\n\r\n### dploy init\r\n### dploy dryrun\r\n### dploy run\r\n### dploy ls\r\n### dploy ps\r\n### dploy update\r\n### dploy destroy\r\n### dploy publish",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}